/* cobra.h */

/*+++ *******************************************************************\
*
*   Copyright and Disclaimer:
*
*       ---------------------------------------------------------------
*       ALL SOFTWARE, APPLICATIONS, DOCUMENTATION, OR MATERIALS        
*       FURNISHED HEREIN IS PROVIDED *AS IS*.  CONEXANT DOES NOT MAKE  
*       ANY WARRANTIES, EITHER EXPRESS OR IMPLIED, AND HEREBY EXPRESSLY
*       DISCLAIMS ANY AND ALL SUCH WARRANTIES TO THE EXTENT PERMITTED  
*       BY LAW, INCLUDING, SPECIFICALLY, ANY IMPLIED WARRANTY ARISING  
*       BY STATUTE OR OTHERWISE IN LAW OR FROM A COURSE OF DEALING OR  
*       USAGE OF TRADE.  CONEXANT DOES NOT MAKE ANY WARRANTIES, EITHER 
*       EXPRESS OR IMPLIED, AND HEREBY EXPRESSLY DISCLAIMS ANY AND ALL 
*       SUCH WARRANTIES WITH RESPECT TO ALL SOFTWARE, APPLICATIONS,    
*       DOCUMENTATION, AND MATERIALS INCLUDING ALL IMPLIED WARRANTIES  
*       OF MERCHANTABILITY, OR OF MERCHANTABLE QUALITY, OR OF FITNESS  
*       FOR ANY PURPOSE, PARTICULAR, SPECIFIC OR OTHERWISE, OR OF      
*       NONINFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS OF OTHERS,     
*       RELATING TO THE SOFTWARE, APPLICATIONS, OPERATION,             
*       DOCUMENTATION, DATA OR RESULTS GENERATED BY THE OPERATION OR   
*       USE THEREOF, AND MATERIALS PROVIDED HEREIN.  THE ENTIRE RISK AS
*       TO THE SUBSTANCE, QUALITY AND PERFORMANCE OF SOFTWARE,         
*       APPLICATIONS, AND DOCUMENTATION DESCRIBING SUCH SOFTWARE       
*       REMAINS WITH THE BUYER.                                        
*                                                                      
*       REGARDLESS OF WHETHER ANY REMEDY SET FORTH HEREIN FAILS OF ITS 
*       ESSENTIAL PURPOSE OR OTHERWISE, CONEXANT SHALL NOT BE LIABLE   
*       FOR ANY EXEMPLARY, SPECIAL, PUNITIVE, SPECULATIVE, INDIRECT,   
*       CONSEQUENTIAL OR INCIDENTAL DAMAGES OF ANY KIND (INCLUDING     
*       WITHOUT LIMITATION LOST PROFITS, LOSS OF INCOME, LOSS OF       
*       GOODWILL, OR OTHER TANGIBLE OR INTANGIBLE BUSINESS LOSS)       
*       ARISING OUT OF OR IN CONNECTION WITH, DIRECTLY OR INDIRECTLY,  
*       SOFTWARE, APPLICATIONS, DOCUMENTATION, OR ANY SERVICES OR      
*       MATERIALS PROVIDED HEREUNDER, OR USE OR INABILITY TO USE THE   
*       SOFTWARE, EVEN IF CONEXANT HAS BEEN ADVISED OF THE POSSIBILITY 
*       OF SUCH DAMAGES.                                               
*
*       Copyright (c) 2001 Conexant Systems, Inc.
*       All Rights Reserved.
*       ---------------------------------------------------------------
*
*   Module Revision Id:
*
*       $Header: cobra.h, 8, 3/16/04 11:44:42 AM, Billy Jackman$
*
*   Abstract:
*
*       Cobra Header data
*
\******************************************************************* ---*/

#ifndef COBRA_H_DEFINED
#define COBRA_H_DEFINED

#include "apifix.h"
#define STRIP_REGNAMES

/*******************************************************************************************************/
/* standard definitions */
/*******************************************************************************************************/
#define CAMARIC_FEATURES               /* Include Camaric feature code at compile-time if defined */

#undef  INCLUDE_VIPER                  /* Include Viper tuner code at compile-time if defined */
#undef  INCLUDE_CONSTELLATION          /* Include Constellation code at compile-time if defined */
#define OPTIMAL_FS_CODE                /* (CR 7482) Allow Optimal Fs selection for single-channel device */
#ifdef  CAMARIC_FEATURES
#define INCLUDE_DISEQC2                /* Include Diseqc 2.x code at compile-time if defined */
#endif  /* #ifdef CAMARIC_FEATURES */

#define DCII_DEFAULT_SMOOTHCLK         /* (CR 8209) Include this define to set an explicit DCII MPGCLKSMOOTHEN setting */


/*******************************************************************************************************/
/* standard inclusions */
/*******************************************************************************************************/
#include <string.h>                    /* ANSI Standard */

#include "cobra_ver.h"                 /* version info */
#include "cobra_enum.h"
#include "cobra_defs.h"
#include "cobra_str.h"
#include "cobra_api.h"
#include "cobra_tuner.h"
#include "cobra_gbls.h"
#include "cobra_drv.h"                 /* bcd headers */
#include "cobra_proto.h"

#include "cobra_cx24108.h"
#ifdef INCLUDE_VIPER
#include "cobra_cx24128.h"
#endif  /* #ifdef INCLUDE_VIPER */

/*******************************************************************************************************/
/* hardware-specific definitions */
/*******************************************************************************************************/
extern void FCopy(void *dest, const void *src, size_t count);
extern void FFillBytes(void *dest, int value, size_t count);
#define memcpy(a,b,c) FCopy((a),(b),(c))
#define memset(a,b,c) FFillBytes((a),(b),(c))
#define labs(x) ((((long)x)>=0)?(unsigned long)x:(unsigned long)(-x))

/*******************************************************************************************************/
/* Macros */
/*******************************************************************************************************/
#ifdef DEBUG
#define  DRIVER_SetError(a,b)    (_DRIVER_SetError((a),(b),(__FILE__),(__LINE__)))
#else
#define  DRIVER_SetError(a,b)    (_DRIVER_SetError((a),(b),(NULL),(__LINE__)))
#endif
                                       /* __FILE__ and __LINE__ are both ANSI predefined macros.  If your */
                                       /* compiler doesn't predefine these, change __FILE__ to NULL, and  */
                                       /* change __LINE__ to (int)0 */
#define  API_ConstGetUnbufferredIQSample(n,a,b)  (API_ConstGetUnbufferedIQSample((n),(a),(b)))
#define  API_ClearPendingInterrupts(a)  (_API_ClearPendingInterrupts((a),((INTEROPTS)INTR_LNB_REPLY_READY|(INTEROPTS)(INTR_ACQ_SYNC|INTR_ACQ_FAILURE|INTR_VITERBI_LOSS|INTR_VITERBI_SYNC|INTR_DEMOD_LOSS|INTR_DEMOD_SYNC))))
#ifndef  CMPLXMAC
#define  CMPLX_set(c,i,d)        (((c)->integer=((long)i)),((c)->divider=((unsigned long)d)))
#endif /* #ifndef  CMPLXMAC */

/*******************************************************************************************************/
#ifndef  min
#define  min(a,b)                ((a) < (b) ? (a) : (b))
#endif

/*******************************************************************************************************/
#ifndef  max
#define  max(a,b)                ((a) > (b) ? (a) : (b))
#endif


/*******************************************************************************************************/
/*******************************************************************************************************/
/*******************************************************************************************************/
#endif  /* #ifndef COBRA_H_DEFINED */
/* CR 9509 : Add an extra newline */

