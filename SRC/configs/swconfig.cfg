# ***************************************************************
# *            CONEXANT PROPRIETARY AND CONFIDENTIAL            *
# *                SOFTWARE FILE/MODULE HEADER                  *
# *    Conexant Systems Inc. (c) 1998, 1999, 2000, 2001, 2002   *
# *                        Austin, TX                           *
# *                     All Rights Reserved                     *
# ***************************************************************
# *                                                             *
# * Filename:     SWCONFIG.CFG                                  *
# *                                                             *
# *                                                             *
# * Description:  Software Configuration Option Definition File *
# *                                                             *
# *                                                             *
# * Author:       Dave Wilson                                   *
# *                                                             *
# ***************************************************************
# * $Id: swconfig.cfg,v 1.74.1.7, 2004-07-07 05:33:40Z, Steven Shen$
# ***************************************************************

# **********************************
# * RTOS - Operating system choice *
# **********************************
NOOS    = 0
PSOS    = 1
VXWORKS = 2
NUP     = 3
UCOS    = 4
UCOS2   = 5
PSOS25  = 6

# **********************************
# * TOOLKIT - Toolkit choices      *
# **********************************
SDT     = 1
ADS     = 2
WRGCC   = 3
GNUGCC  = 4


# ******************************** 
# * BSP config data magic number *
# ********************************
MAGIC = 0x12345678

# **************************************
# * Encoded audio buffer memory size   *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Encoded audio buffer size</b></center></font></td></tr>
CFG_KEY = ENCAUD_SIZE
?<p> This parameter defines in kbytes the size of the encoded audio buffer.
[
  ?<p>Default is 11KB
  CFG_DEFAULT = 22
]

# **************************************
# * Encoded video buffer memory size   *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Encoded video buffer size</b></center></font></td></tr>
CFG_KEY = ENCVID_SIZE
?<p> This parameter defines in kbytes the size of the encoded video buffer.
[
  ?<p>Default is 375KB
  CFG_DEFAULT = 375
]

# **************************************
# * User data buffer memory size       *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>User data buffer size</b></center></font></td></tr>
CFG_KEY = USRDAT_SIZE
?<p> This parameter defines in kbytes the size of the user data buffer.
[
  ?<p>Default is 1KB
  CFG_DEFAULT = 1
]

# **************************************
# * Ancillary audio buffer memory size *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Ancillary audio buffer size</b></center></font></td></tr>
CFG_KEY = AUDANC_SIZE
?<p> This parameter defines in kbytes the size of the ancillary audio buffer.
[
  ?<p>Default is 1KB
  CFG_DEFAULT = 1
]

# **************************************
# * Decoded I-frame buffer memory size *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Decoded I-frame buffer size</b></center></font></td></tr>
CFG_KEY = DEC_I_SIZE
?<p> This parameter defines in kbytes the size of the decoded I-frame buffer.
[
  ?<p>Default is 608KB
  CFG_DEFAULT = 608
]

# **************************************
# * Decoded P-frame buffer memory size *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Decoded P-frame buffer size</b></center></font></td></tr>
CFG_KEY = DEC_P_SIZE
?<p> This parameter defines in kbytes the size of the decoded P-frame buffer.
[
  ?<p>Default is 608KB
  CFG_DEFAULT = 608
]

# **************************************
# * Decoded B-frame buffer memory size *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Decoded B-frame buffer size</b></center></font></td></tr>
CFG_KEY = DEC_B_SIZE
?<p> This parameter defines in kbytes the size of the decoded B-frame buffer.
[
  ?<p>Default is 608KB
  CFG_DEFAULT = 608
]

# **************************************
# * Transport buffer memory size       *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Transport buffer size</b></center></font></td></tr>
CFG_KEY = TRNSPRT_SIZE
?<p> This parameter defines in kbytes the size of the transport buffer.
[
  ?<p>Default is 4KB
  CFG_DEFAULT = 4
]

# **************************************
# * DVR event buffer memory size       *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>DVR event buffer size</b></center></font></td></tr>
CFG_KEY = DVR_EVENT_SIZE
?<p> This parameter defines in kbytes the size of the DVR event buffer.
[
  ?<p>Default is 0KB
  CFG_DEFAULT = 0
]

# **************************************
# * DVR video buffer memory size       *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>DVR video buffer size</b></center></font></td></tr>
CFG_KEY = DVR_VIDEO_SIZE
?<p> This parameter defines in kbytes the size of the DVR video buffer.
[
  ?<p>Default is 0KB
  CFG_DEFAULT = 0
]

# **************************************
# * DVR audio buffer memory size       *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>DVR audio buffer size</b></center></font></td></tr>
CFG_KEY = DVR_AUDIO_SIZE
?<p> This parameter defines in kbytes the size of the DVR audio buffer.
[
  ?<p>Default is 0KB
  CFG_DEFAULT = 0
]

# **************************************
# * CWP buffer memory size             *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>DirecTV CWP buffer size</b></center></font></td></tr>
CFG_KEY = CWP_SIZE
?<p> This parameter defines in kbytes the size of the CWP buffer.
[
  ?<p>Default is 0KB
  CFG_DEFAULT = 0
]

# **************************************
# * CAP buffer memory size             *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>DirecTV CAP buffer size</b></center></font></td></tr>
CFG_KEY = CAP_SIZE
?<p> This parameter defines in kbytes the size of the CAP buffer.
[
  ?<p>Default is 0KB
  CFG_DEFAULT = 0
]

# **************************************
# * Linker RAM base address            *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Linker RAM base address</b></center></font></td></tr>
CFG_KEY = LINKER_RAM_BASE
?<p> This parameter defines the base address of the image for RAM-linked images and the base
? address of the RW memory for ROM-linked images. If any of the following keys are overridden, this 
? key must also be overridden: ENCAUD_SIZE, ENCVID_SIZE, USRDAT_SIZE, AUDANC_SIZE, DEC_I_SIZE,
? DEC_P_SIZE, DEC_B_SIZE, TRNSPRT_SIZE, DVR_EVENT_SIZE, DVR_AUD_SIZE, DVR_VID_SIZE, CWP_SIZE,
? CAP_SIZE. 
[
  ?<p>Default is 0x0025f000. This is the maximum address necessary for any of the chips. Since this
  ? will waste a small amount of RAM on some chips, customers should adjust this value to match
  ? the exact value of HWBUF_TOP defined in the chip header file for the chip they are using.
  CFG_DEFAULT = 0x0025f000
]

# **************************************
# * Linker ROM base address            *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Linker ROM base address</b></center></font></td></tr>
CFG_KEY = LINKER_ROM_BASE
?<p> This parameter defines the base address of the image for ROM-linked images.
[
  ?<p>Default is 0x20020000, the location of the first image in ROM. 
  CFG_DEFAULT = 0x20020000
]

# **************************************
# * Smartcard related SWconfig options *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Number of Smart Card clients supported by software</b></center></font></td></tr>
CFG_KEY = SMC_NUM_CLIENTS
?<p>Number of Smart Card Clients supported by software
[
  ?<p> default is 2
  CFG_DEFAULT = 2
]

# ***************************************
# * Smartcard 0/1 Voltage configuration *
# ***************************************
?<tr><td colspan=4><font size="+1"><center><b>Smart Card Voltage Set Options</b></center></font></td></tr>

CFG_KEY = SC0_VOLT_VALUE
?<p>Sets the Voltage that will be sent to Smart Card 0.
[
  ?<p> Can be set to 3.3V or 5V. Defaults to 3.3V
  SC_VOLT_VALUE_33 = 0
  SC_VOLT_VALUE_5  = 1
  CFG_DEFAULT = SC_VOLT_VALUE_33
]

CFG_KEY = SC1_VOLT_VALUE
?<p>Sets the Voltage that will be sent to Smart Card 1.
[
  ?<p> Can be set to 3.3V or 5V. Defaults to 3.3V
  CFG_DEFAULT = SC_VOLT_VALUE_33
]

# **************************
# * Parser-related options *
# **************************

?<tr><td colspan=4><font size="+1"><center><b>DVB/DTV Transport Stream Parser Options</b></center></font></td></tr>

CFG_KEY = PARSER_TYPE
?<p>Defines whether parse is for DVB or DIRECTV.
[
  DVB_PARSER  = 0
  DTV_PARSER  = 1
  CFG_DEFAULT = DVB_PARSER
]

CFG_KEY = PARSER_PSI_BUFFER
?<p>Defines whether Multiple PSI buffers are used (normal setting).  A very old
? version of the gendmxc driver can use the Single PSI buffer option.  The new
? demux driver must use the Multiple PSI setting.
[
  MULTI_PSI   = 0
  SINGLE_PSI  = 1
  CFG_DEFAULT = MULTI_PSI
]                      

CFG_KEY = PARSER_FILTERING
?<p>Defines whether filtering is done with 12 bytes mask and 12 bytes match
? or whether the Canal+ style filtering is used which includes a negative
? mode.  Since there is an additional bit for each filter bit (3 instead of 2),
? and there is only 24 bytes total, 24 is divided by 3 instead of 2 and
? that leaves 8 bytes mask, 8 bytes match, and 8 bytes mode.
[
  FILTER_1212 = 0
  FILTER_888  = 1
  CFG_DEFAULT = FILTER_1212
]

CFG_KEY = FILTER_ON_LENGTH
?<p>Defines whether filtering is performed on length field of PSI sections.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = PARSER_DES_DESCRAMBLER
?<p>Defines whether the parser descrambler does DES descrambling
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = DMXVER
?<p>Defines which demux driver to use (the older gendmxc or the newer demux
? driver.  Some applications (newer applications) don't use this setting
? at all (e.g. watchtv, ndstests).  This is in place primarily to control
? which demux driver is used in legacy application code (e.g. otv12ctl,
? otv2ctrl, etc).  Eventually this should be removed as all code in the
? tree today should be using the new demux driver.
[
  DEMUX       = 0
  GENDMXC     = 1
  CFG_DEFAULT = DEMUX
]
  
CFG_KEY = PARSER_NDS_ICAM
?<p>Defines whether to enable NDS support in the pawser microcode.  This can
? only be enabled for customers who have a valid NDS license.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = PARSER_XPRT_BUFFER
?<p>Defines whether the XPRT (transport buffer) is available or not.  By default,
? this option is always enabled.  This is used for PES (non-A/V PES) support
? which is typically used for teletext.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = YES
]
 
CFG_KEY = PARSER_PCR_PID_INT
?<p>Defines whether pawser microcode sends a pawser event interrupt to the host  
? when a PCR arrives or not.  This is a default build option for nearly all
? microcodes.  
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = YES
]

CFG_KEY = PARSER_DISCARD_BAD_PES
?<p>Defines whether pawser microcode discards a bad PES section or not.  This
? is a default build option for nearly all microcodes.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = YES
]

CFG_KEY = PARSER_BAD_PES_INT
?<p>Defines whether pawser microcode sends a pawser event interrupt to the host
? when a bad PES section has arrived or not.  This is a default build option
? for nearly all microcodes.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = YES
]

CFG_KEY = PARSER_PES_PID_INT
?<p>Defines whether pawser microcode sends a pawser event interrupt to the host
? when a A/V PES section arrives and stored to an encoded buffer.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = YES
]

CFG_KEY = PARSER_KEY64
?<p>Defines whether pawser microcode uses the standard DVB descrambler key or
? a raw 64bit descrambler key (no DVB entropy).  By default, this option is off.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = PARSER_NAV_SUPPORT
?<p>Defines whether to allow storage of non-A/V (NAV) PES to the PSI buffer
? or not.  This option is only available with SINGLE_PSI and is considered
? a very out-dated method for getting non-A/V PES and should not be used.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = PARSER_DMA_MUX_SEL
?<p>Defines whether the input to the pawser can be run-time switched between
? a live-TS and system DMA and vice-versa. This is typically off.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = PARSER_PASSAGE_ENABLE
?<p>Defines whether the pawser support Sony Passage stream
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = PVR
?<p>Defines whether this is a PVR system or not.  This is typically off.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = PVR_MPEG_FS_TYPE
?<p>Defines the file system type used for PVR MPEG data storage.
[
  GENERIC_FS          = 1
  NUPFILE             = 2
  CFG_DEFAULT         = GENERIC_FS
]

CFG_KEY = PVR_BLOCK_FS_TYPE
?<p>Defines the file system type used for PVR Index data storage.
[
  ?<p>Valid values are GENERIC_FS and NUPFILE
  CFG_DEFAULT         = GENERIC_FS
]

CFG_KEY = XTV_SUPPORT
?<p>Defines whether XTV is supported or not.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT         = NO
]

CFG_KEY = DMXDMA
?<p>Defines whether the Demux driver supports DMA input.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = LEGACY_DVR
?<p>Defines whether this is a DVR system or not.  This is typically off.
? This define is used by the demux driver code enabling the extended
? DVR API which is used for single demux/pawser chips supporting
? ES storage.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = PARSER_BOOTLOADER
?<p>Defines whether pawser microcode is used strictly for bootstrapping (no PES).
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = EXTENDED_CODELDR
?<p>Defines whether to build the extended codeldr support and if so, whether to build for run-from-RAM or run-from-RAM.
[
  ?<p>Valid values are NOT_PRESENT, FROM_ROM, FROM_RAM
 #NOT_PRESENT  = 0
  FROM_ROM     = 1
  FROM_RAM     = 2
  CFG_DEFAULT  = FROM_ROM
]

CFG_KEY = CLX_BYPASS_BUTTON_BOOT_SELECT
?<p>Defines when to call the custom boot loader entry point for Codeldr.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT  = NO
]

CFG_KEY = CLX_ENTRY_POINT
?<p>Defines when to call the custom boot loader entry point for Codeldr.
[
  ?<p>Valid values are MIN_INIT, PARTIAL_INIT, FULL_INIT
  MIN_INIT     = 1
  PARTIAL_INIT = 2
  FULL_INIT    = 3
  CFG_DEFAULT  = FULL_INIT
]

CFG_KEY = CLX_NVMEM_SIZE
?<p>Defines how much non-volatile memory to allocate in the loader.
[
  ?<p>Valid values are 0-1024 bytes.
  CFG_DEFAULT  = 0
]

CFG_KEY = CL_MODE
?<p>Codeldr can be built two ways (well, three if you count "extended" behavior
?as well).  This config option selects between the standard mode and the linux
?mode.
[
    CL_MODE_STANDARD    = 1
    CL_MODE_LINUXLOADER = 2
    CL_MODE_NDSLOADER   = 3
    CL_MODE_UPGRADE     = 4
    CL_MODE_B2B_UPGRADE = 5
    CFG_DEFAULT         = CL_MODE_STANDARD
]

CFG_KEY = CL_GUNZIP_FEATURE
?<p>This config option enables codeloader to unzip G-Zipped application image.
?Caution: this option should only be enabled with ADS build.
[
    CL_GUNZIP_SUPPORTED     = 1
    CL_GUNZIP_NOT_SUPPORTED = 2
    CFG_DEFAULT         = CL_GUNZIP_NOT_SUPPORTED
]

CFG_KEY = CL_UNCOMPRESS_FEATURE
?<p>This config option enables codeloader to unzip G-Zipped application image.
?Caution: this option should only be enabled with ADS build.
[
    CL_GZ_SUPPORTED     = 1
    CL_LZO_SUPPORTED = 2
    CFG_DEFAULT         = CL_LZO_SUPPORTED
]
CFG_KEY = CL_FORBID_INTERRUPTS
?<p>Some networks want interrupts in their loaders, others dont.  If you write
?an interrupt-enabled driver, it must be able to operate in polled mode as well.
?(for example, if you write a serial driver, the getchar function should operate 
?in both in interrupt mode (if CL_FORBID_INTERRUPTS is FALSE) or in polled mode
?(if CL_FORBID_INTERRUPTS is TRUE))
[
   ?<p>Default is to allow interrupts
   CFG_DEFAULT = NO
]

CFG_KEY = DEFAULT_TS_INPUT_SOURCE
?<p>Defines the default TS input source, used in the Codeldr.
[
  ?<p>Valid values are NOT_PRESENT, TS_IN_SRC_BASEBAND, TS_IN_SRC_RF
 #NOT_PRESENT        = 0
  TS_IN_SRC_BASEBAND = 1
  TS_IN_SRC_RF       = 2
  CFG_DEFAULT        = TS_IN_SRC_RF
]

CFG_KEY = DIRECTV_PROGRAM_GUIDE
?<p>Defines DirecTV Program Guide to be APG (default) or MPG
[
  APG  = 0
  MPG  = 1
  CFG_DEFAULT = APG
]

?<tr><td colspan=4><font size="+1"><center><b>Video Options</b></center></font></td></tr>

# *******************
# * Video Microcode *
# *******************               
CFG_KEY = VIDEO_UCODE_TYPE
?<p>This parameter defines the version of video microcode to use with the 
? build. Although three versions are defined, each type may not be available 
? for every chip so beware. Currently, all flavours are supported on Colorado 
? but only the basic picture-based error recovery versions are available for 
? Hondo and Wabash.
[
  VMC_PICTURE_ERROR_RECOVERY    = 0
  VMC_EXTRA_ERROR_RECOVERY      = 1
  VMC_MACROBLOCK_ERROR_RECOVERY = 2
  VMC_MACRO_BRAZOS_NTSC_PAL      = 3
  VMC_MASK_PTS_BEFORE_SYNC      = VMC_MACROBLOCK_ERROR_RECOVERY
  ?<p>The final value is included to allow existing code using a now-redundant
  ? microcode version to build. The PTS masking fix (for an Asian network who
  ? don't seem to set the top couple of bits in the PTS) is now rolled into the
  ? main microcode version.
  CFG_DEFAULT                   = VMC_MACROBLOCK_ERROR_RECOVERY
]  

# ****************
# * Video format *
# ****************
CFG_KEY = VIDEO_OUTPUT_STANDARD_SWITCHABLE
?<p>This parameter determines if the video standards can be switched at boot time.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = YES  
]

CFG_KEY = VIDEO_OUTPUT_STANDARD_DEFAULT
?<p>This parameter defines the default video standard to use 
[
  ?<p>Valid values are NTSC, PAL or SECAM
  NTSC        = 1
  PAL         = 2
  SECAM       = 4
  AUTO_DETECT          = 3
  CFG_DEFAULT = PAL
]

CFG_KEY = VIDEO_FORMAT_DEFAULT
?<p>This parameter defines which format should be used by default when
? displaying video images whose aspect ratio is different from the screen.
[
  PANSCAN     = 1
  LETTERBOX   = 2
  CFG_DEFAULT = PANSCAN
]

CFG_KEY = DRIP_TEST
?<p>If set to YES, this parameter will build WatchTV with a hardcoded "video drip" (motion MPEG stream) for use in testing the video clip playback from memory functions.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = ENABLE_DEFERRED_VIDEO_UNBLANK
?<p>This parameter allows you to select between two operating modes of the function gen_video_unblank.
? By default, the function will unblank the video plane as soon as it is called, regardless of whether
? or not a valid image is available for display. Setting the parameter to YES, however, defers the actual
? unblanking of the video plane until a valid image is available. The image is considered invalid
? either if no decode has yet taken place into the buffer that will next be displayed or if the last
? decode into that buffer was an MPEG still not marked for display.
? <p>When building OpenTV 1.2, this option is enabled regardless of the setting in the software
? config file.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = BRAZOS_WABASH_FAST_UNBLANK
?<p>This parameter allows you to select a "fast unblank" option for Brazos and Wabash platforms.
? With this option, video will be unblanked as soon as the decoder determines that it will be in sync
? within a few pictures. After unblanking, a static frame may be displayed for two or three picture
? times before transitioning into smooth video. There will be no stuttering or image corruption, however.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = FAST_RETURN_FROM_PLAY
?<p>This parameter allows you to select between two operating modes of the function gen_video_play.
? By default, the function will return as soon as the video decoder has been configured.
? Setting the parameter to YES, however, defers the return until either video is ready to be displayed
? Use this in conjunction with DEFERRED_UNBLANK to have the driver return control to the middleware as quickly as
? possible and unblank automatically when it is safe to do so.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = YES
]

CFG_KEY = BLANK_ON_VIDEO_START
?<p>This parameter allows you to include code which will blank the video plane
? while video starts playing, unblanking it when a valid frame is available for display.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = RFMOD_DEFAULT_MODE
?<p>This parameter defines the default output mode setting for the RF modulator
? The following defines must map the values in the enum of CNXT_RFMOD_MODE defined in the RFMOD public header
[
  RFMOD_MODE_OFF=0 
  RFMOD_MODE_PASSTHRU=1
  RFMOD_MODE_CH3=2
  RFMOD_MODE_CH4=3
  CFG_DEFAULT=RFMOD_MODE_PASSTHRU
]

CFG_KEY = TURN_OFF_MACROVISION_DURING_INIT
?<p>The value of this key controls whether Macrovision is enabled or disabled
? during driver intialisation when the target hardware includes a 
? Macrovision-capable video encoder. By default, Macrovision will be enabled
? after the IRD boots unless this key is changed to YES.
[
    ?<p>Valid values are YES and NO
    CFG_DEFAULT = NO
]

# ****************
# * Audio format *
# ****************

?<tr><td colspan=4><font size="+1"><center><b>Audio Decoder Options</b></center></font></td></tr>
  
CFG_KEY = AUDIO_FORMAT_SUPPORT
?<p>This parameter determines whether the software will build allowing decode of MPEG audio, AC3 audio or both.
[
  AUDIO_MPEG2 = 1
  AUDIO_AC3   = 2
  AUDIO_BOTH  = 3
  CFG_DEFAULT = AUDIO_MPEG2
]

CFG_KEY = CANAL_AUDIO_HANDLING
?<p>If set to YES, this parameter instructs the audio and video drivers to build with a couple of 
? special options required for Canal+/MediaHighway systems.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = SOFTWARE_AC3_SPDIF_FIX  
?<p>Defines whether to include the software AC3 via SPDIF workaround.  
? SPDIF Workaround is required for Audio microcodes running on all existing 
? Colorado chips. This is not required for all the other non-Colorado chips.
? The Software AC3 fix is the solution of choice where possible. 
? Do not set both this value and PARSER_AC3_SPDIF_FIX to YES since build errors 
? are likely to occur in this case. Only one of the two should be enabled at a 
? time. 
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = YES
]

CFG_KEY = PARSER_AC3_SPDIF_FIX
?<p>Defines whether to build in the pawser AC3 via SPDIF workaround. 
? SPDIF Workaround is required for Audio microcodes running on all existing 
? Colorado chips. This is not required for all the other non-Colorado chips.
? The Parser (HW) fix has been replaced by the Software AC3 fix (above) as the 
? solution of choice, where possible. 
? Do not set both this value and SOFTWARE_AC3_SPDIF_FIX to YES since build 
? errors are likely to occur in this case. Only one of the two should be enabled
? at a time. 
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = PCM_OPTION
?<p>This parameter determines which of various PCM audio drivers are 
? included in the build.
? <ul><li>HW_PCM is a simple, low overhead driver that does as little as 
? possible to get the MPEG audio out of the IRD,</li> 
? <li>GENERIC_PCM adds PCM sample playback, sample rate conversion and 
? mixing support,</li>
? <li>SKY_PCM supports the special PCM options required for the BSkyB 
? network and</li>
? <li>CANAL_PCM offers features required by MediaHighway</li></ul>
[
  HW_PCM      = 0
  GENERIC_PCM = 1
  SKY_PCM     = 2
  CANAL_PCM   = 3
  CFG_DEFAULT = HW_PCM
]

CFG_KEY = CONF_AUDIO_AC3_ENABLED
?<p>This parameter determines whether AC3 is enabled when AUDIO_FORMAT_SUPPORT defined supports AC3
? If set to YES, audio AC3 is enabled 
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = CONF_AUDIO_SYNC
?<p>This parameter determines whether audio sync is allowed or not 
? If set to YES, allow audio sync 
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = YES
]

# **********************
# * Disable SRC in PCM *
# **********************
CFG_KEY = PCM_DISABLE_SRC
?<p>This parameter can be used to remove the Sample Rate conversion code & 
? relevant functionality in a build configuration. 
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

# ***********************
# * Unoptimized PCM SRC *
# ***********************
CFG_KEY = USE_UNOPTIMIZED_PCM_SRC
?<p>This parameter allows choice of the Unoptimized PCM SRC routines. This is
?provided as a debug feature and also as way to reduce code size (unoptimized
?code can be Thumb), if desired. By default, this is Set to NO, so that the 
?Optimized ARM code is used.
[
  ?<p>Valid values are YES or NO. 
  CFG_DEFAULT = NO
]

# *****************************************
# * Brazos 16bit Memory SW PCM Workaround *
# *****************************************
CFG_KEY = USE_BRAZOS16_PCM_SW_WORKAROUND
?<p>This parameter allows inclusion of the SW workaround to output PCM Audio
?on a Brazos IRD using 16 bit memory. By default, this is Set to NO and will be
?choosen to be included based on select platforms requiring this workaround.
[
  ?<p>Valid values are YES or NO. 
  CFG_DEFAULT = NO
]

# ****************************
# * Demodulator lock timeout *
# ****************************

?<tr><td colspan=4><font size="+1"><center><b>Tuner & Demodulator Options</b></center></font></td></tr>

CFG_KEY = DEMOD_LOCK_TIMEOUT
?<p>This parameter allows some tuning of the time the demod driver waits before deciding that it cannot acquire the requested signal.
?<b><i>What units are used here - seconds? If no units, what's the meaning of each value?</i></b>
[
  DEMOD_LOCK_TIMEOUT_CONSERVATIVE = 1
  DEMOD_LOCK_TIMEOUT_DEVELOPMENT  = 2
  CFG_DEFAULT                     = DEMOD_LOCK_TIMEOUT_DEVELOPMENT
]


CFG_KEY = CABLE_DEMOD_MODE
?<p>This parameter allows selection of the cable demod mode - Europe or North America.
[
  CABLE_DEMOD_MODE_ANNEXA = 1
  CABLE_DEMOD_MODE_ANNEXB = 2
  CFG_DEFAULT             = CABLE_DEMOD_MODE_ANNEXA
]
                      
# *****************
# * Cache Control *
# *****************

?<tr><td colspan=4><font size="+1"><center><b>CPU Cache Control</b></center></font></td></tr>

CFG_KEY = MMU_CACHE_DISABLE
?<p>This parameter indicates caches (instruction & data) are disabled.
[
  ?<p>Valid values are 1 and 0.  Set to 1 to disable caches.  Set to 0 to
  ?leave caches enable (the default).
  CFG_DEFAULT = 0
]

CFG_KEY = MMU_CACHE_TYPE
?<p>This parameter indicates caches type (write-thru or write-back).
[
  CACHE_TYPE_WT = 1
  CACHE_TYPE_WB = 0
  CFG_DEFAULT   = CACHE_TYPE_WB
]

# *************************
# * Debug trace to memory *
# *************************
?<tr><td colspan=4><font size="+1><center><b>Debug and Trace Options</b></center></font></td></tr>

CFG_KEY = LLSERMEM_BUFSIZE
?<p>This parameter allows tuning of the RAM buffer used to hold trace messages
? in cases where serial trace is redirected to memory. To enable serial trace to
? memory, ensure that TRACE_PORT is set to TRACE_MEMORY in the hardware configuration
? file that you are using.
[
  ?<p>Valid values are integers representing the number of KB of storage 
  ? to set aside for the trace buffer.
  CFG_DEFAULT = 100
]

CFG_KEY = DISABLE_TRACE_TIMESTAMPS
?<p>By default, all serial trace messages are prefixed with a timestamp. This parameter allows
? these timestamps to be removed. Although the timestamps are generally useful, there are cases
? where they are not required (for example, when comparing application trace logs gathered during 
? OpenTV testing with golden log files) and this parameter allows an image to be built which does
? not contain the time information.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT = NO
]

CFG_KEY = ENABLE_TRACE_IN_RELEASE
?<p>This parameter determines whether the trace is enabled in release builds
[
  ?<p>Valid values are YES or NO. 
  CFG_DEFAULT = NO
]

# ***********************************
# * KAL support for Native OS tasks *
# ***********************************

?<tr><td colspan=4><font size="+1><center><b>KAL support for Native OS tasks</b></center></font></td></tr>

CFG_KEY = BACKFIT_RTOS_TASKS_INTO_KAL
?<p>This setting determines whether the KAL should allow access for native
? tasks created directly from the RTOS. The default will be Yes.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT = YES
]

# **********************************
# * OpenTV-specific customisations *
# **********************************

?<tr><td colspan=4><font size="+1><center><b>OpenTV Configuration Options</b></center></font></td></tr>

CFG_KEY = ALTERNATE_OCODE_MEM_PROTECTION
?<p>This parameter allows a customer to compile out the default OpenTV o-code
? memory protection function as supplied in the OTVKAL module and replace them
? with their own implementation. If set to YES, no OTVKAL code will be compiled
? for functions memprot, is_memprot and should_stay_in_same_segment and the
? customer must provide implementations of these functions within their own code.
? When building for OpenTV 1.2, this parameter will also affect the 1.2-specific
? protection functions add_memprot_segment, remove_memprot_segment and
? remove_all_memprot_segments.
?<p>This parameter is only used in OpenTV EN2 or 1.2 builds.
[
  ?<p>Valid values are YES or NO. If set to YES, it is assumed that customer
  ? code will implement the memory protection functions. If set to NO, the 
  ? default implementations in OTVKAL will be compiled.
  CFG_DEFAULT = NO
]

CFG_KEY = ALTERNATE_ABORT_REPORT_HANDLING
?<p>This parameter allows a customer to replace the contents of the OpenTV abort_report
? function with their own version. If set to YES, the default version of abort_report
? found in OTVKAL will not be compiled and the customer must provide their own implementation
? of the function.
?<p>This parameter is only used in OpenTV EN2 or 1.2 builds.
[
  ?<p>Valid values are YES or NO. If set to YES, it is assumed that customer
  ? code will implement the abort_report function. If set to NO, the default 
  ? implementation in OTVKAL will be compiled.
  CFG_DEFAULT = NO
]

CFG_KEY = ALTERNATE_AV_INIT_HANDLING
?<p>If set to YES, this parameter causes the audio and video drivers for OpenTV to initialise
? without registering their function table with the middleware. A new function is included allowing
? the populated function table to be queried. This is intended  to allow applications to override
? some or all of the AV functions provided by the existing drivers before calling the OpenTV
? av_driver_register function.  Notethat setting this parameter to YES will also prevent the
? AV driver from registering callbacks for the Simple Video Scaling extension if this is included.
[
   ?<p>Valid values are YES or NO. If set to YES, it is assumed that the customer code
   ?will call av_query_function_table() and av_driver_register() to register the audio and video
   ?drivers with OpenTV after calling the driver's av_init() function.
   CFG_DEFAULT = NO
]

CFG_KEY = ALTERNATE_AV_SQC_HANDLING
?<p>If set to YES, this parameter causesthe OpenTV AV driver not to include any System Query and
?Control functions. It is assumed that these will be provided in customer code.
[
  ?<p>Valid values are YES or NO. IF set to YES, it is assumed that the customer code will
  ?implement the audio and video SQC interfaces.
  CFG_DEFAULT=NO
]

CFG_KEY = NUM_OPENTV_FAR_SEGMENTS
?<p>This parameter sets the number of far memory segments offered by the OpenTV Kernel driver (OTVKAL). 
? It is recommended that, unless dictated by the IRD's target network, this value should be left
? set to 1. All far heap memory for all segments is allocated on startup so holding some of it back
? makes no difference to overall memory usage. The current driver code handles up to 4 far segments.
? If more are required, some minor modifications to OTVKAL.C will be necessary. Note that for OpenTV 1.2,
? these values are ignored and specific, BSkyB-defined values for number of segments and size of each
? are used instead.
?<p>This parameter is only used in OpenTV EN2 or 1.2 builds.
[
  ?<p>Valid values are integers representing the number of segments to reserve.
  CFG_DEFAULT = 1
]

CFG_KEY = OPENTV_FAR_SEGMENT_SIZE_1
?<p>This parameter sets the size of the first OpenTV far memory segment offered by the kernel driver
? (OTVKAL). For each far segment offered, there must be an equivalent, appropriately numbered, 
? parameter in the software configuration file setting the size of that segment.
?<p>This parameter is only used in OpenTV EN2 or 1.2 builds.
[
  ?<p>Set this parameter to the number of kilobytes to reserve for the first far segment.
  CFG_DEFAULT = 768
]

CFG_KEY = OPENTV_FAR_SEGMENT_SIZE_2
?<p>This parameter sets the size of the second OpenTV far memory segment offered by the kernel driver
? (OTVKAL). 
?<p>This parameter is only used in OpenTV EN2 or 1.2 builds.
[
  ?<p>Set this parameter to the number of kilobytes to reserve for the second far segment.
  CFG_DEFAULT = 0
]

CFG_KEY = OPENTV_FAR_SEGMENT_SIZE_3
?<p>This parameter sets the size of the third OpenTV far memory segment offered by the kernel driver
? (OTVKAL). 
?<p>This parameter is only used in OpenTV EN2 or 1.2 builds.
[
  ?<p>Set this parameter to the number of kilobytes to reserve for the third far segment.
  CFG_DEFAULT = 0
]

CFG_KEY = OPENTV_FAR_SEGMENT_SIZE_4
?<p>This parameter sets the size of the fourth OpenTV far memory segment offered by the kernel driver
? (OTVKAL). 
?<p>This parameter is only used in OpenTV EN2 or 1.2 builds.
[
  ?<p>Set this parameter to the number of kilobytes to reserve for the fourth far segment.
  CFG_DEFAULT = 0
]

CFG_KEY = OPENTV_DIRECT_HEAP_SIZE
?<p>This parameter controls the size of the OpenTV direct memory heap and, also, whether or not 
? the Conexant drivers allocate memory from this heap or the main system heap. When set to any 
? number other than 0, the direct heap is assumed to be for OpenTV use only and the low level
? drivers will allocate from the system heap. When 0, all free memory is assigned to the direct
? heap and the drivers allocate memory from the direct heap via calls to direct_memory_alloc.
?<p>This parameter is only used in OpenTV EN2 or 1.2 builds.
[
  ?<p>Set this parameter to the number of kilobytes to reserve for the direct memory heap.
  ?If set to 0, the direct heap occupies all free RAM (after leaving space for RTOS objects
  ?and stacks) and the drivers allocate from the direct heap.
  CFG_DEFAULT=0
]

CFG_KEY = OPENTV_USE_VTS_WORKAROUNDS
?<p>This config parameter tells drivers to use non-spec behavior for getting around
? OPENTV VTS test limitations. As an example, the VBI teletext test requires that the
? teletext driver ignores PTS information since the test stream is incorrectly
? multiplexed.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=NO
]

CFG_KEY = OPENTV_USE_CACHEABLE_SCRATCHPAD
?<p>To ensure that the contents of the OSD scratchpad are correctly read by the blitter,
? we do one of two things, either provide the scratchpad pointer to OpenTV as a
? non-cached pointer or make it cached but flush the cache before accessing the buffer
? using the hardware.
? <p>By default, we provide a non-cached buffer to OpenTV for the scratchpad but this
? option allows you to use a cached scratchpad and flush the cache prior to any blit
? involving it. This may prove faster if you are running many graphically-intensive
? o-code applications.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=NO
]

CFG_KEY = INCLUDE_OTV_EXTENSION_SVSCALE
?<p>This parameter determines whether the Simple Video Scaling extension is included in an
?OpenTV Core 1.0 image built with this configuration file.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=YES
]
  
CFG_KEY = INCLUDE_OTV_EXTENSION_EVB
?<p>This parameter determines whether the Event Broker extension is included in an
?OpenTV Core 1.0 image built with this configuration file.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=YES
]
  
CFG_KEY = INCLUDE_OTV_EXTENSION_EITS
?<p>This parameter determines whether the Event Information Table Schedule extension is 
? included in an OpenTV Core 1.0 image built with this configuration file.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=YES
]

CFG_KEY = SIZE_OPENTV_EITS_BUFFER
?<p>This parameter determines the size of the buffer allocated for use by the
? EITS extension if included in a build.
[
  ?<p>Set this value to the number of KB to set aside for use by the EITS extension.
  CFG_DEFAULT=64
]


CFG_KEY = INCLUDE_OTV_EXTENSION_CONNECTIVITY
?<p>This parameter determines whether the Connectivity extensions are included in an
?OpenTV Core 1.0 image built with this configuration file.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=YES
]

CFG_KEY = INCLUDE_OTV_EXTENSION_SMARTCARD
?<p>This parameter determines whether the Smartcard extension is included in an
?OpenTV Core 1.0 image built with this configuration file.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=YES
]
  
CFG_KEY = INCLUDE_OTV_EXTENSION_TELETEXT
?<p>This parameter determines whether the teletext extension is included in an
?OpenTV Core 1.0 image built with this configuration file.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=YES
]
  
CFG_KEY = INCLUDE_OTV_EXTENSION_DVB_SUBTITLE
?<p>This parameter determines whether the DVB Subtitling extension is included in an
?OpenTV Core 1.0 image built with this configuration file.
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=YES
]

CFG_KEY = OTV_PTS_NOTIFICATION_PERIOD
?<p>This parameter determines the number of ms for the Tick Timer used for PTS
?notification required for DVB Subtitle Support.  A zero means that this timer
?is not started.
[
  ?<p>Valid values are 0 to MAX_TICK_PERIOD.
  CFG_DEFAULT=100
]

# NOT YET SUPPORTED
#  
#CFG_KEY = INCLUDE_OTV_EXTENSION_MULTIPLANE
#?<p>This parameter determines whether the Multiplane Graphics extension is included in an
#?OpenTV Core 1.0 image built with this configuration file.
#[
#  ?<p>Valid values are YES and NO.
#  CFG_DEFAULT=NO
#]

 
CFG_KEY = NUM_OTV_BRIGHTNESS_LEVELS
?<p>This parameter defines the number of brightness levels that the OpenTV Core 1.0 video
?encoder system query and control driver (found in OSD/OSDDRV.C) should report to OpenTV.
?If a number less than 255 is specified, no changes are made in the low level driver to
?quantise the values passed since OpenTV always assumes that levels are passed on the 
?range 0-255 regardless of the number of distinct levels supported. Further, the SYSCVID
?test in the OpenTV Verification Test Suite assumes that querying the setting will always
?return the exact value passed the last time the setting was set rather than any quantised
?version.
[
  ?<p>Valid values are 1 to 255.
  CFG_DEFAULT=32
]
 
CFG_KEY = NUM_OTV_CONTRAST_LEVELS
?<p>This parameter defines the number of contrast levels that the OpenTV Core 1.0 video
?encoder system query and control driver (found in OSD/OSDDRV.C) should report to OpenTV.
?See NUM_OTV_BRIGHTNESS_LEVELS for information on quantisation.
[
  ?<p>Valid values are 1 to 255.
  CFG_DEFAULT=32
]
 
CFG_KEY = NUM_OTV_COLOR_LEVELS
?<p>This parameter defines the number of color levels that the OpenTV Core 1.0 video
?encoder system query and control driver (found in OSD/OSDDRV.C) should report to OpenTV.
?See NUM_OTV_BRIGHTNESS_LEVELS for information on quantisation.
[
  ?<p>Valid values are 1 to 255.
  CFG_DEFAULT=32
]
 
CFG_KEY = ENABLE_OTV_APPLICATION_STORAGE
?<p>This parameter determines whether or not a block of flash will be set aside for storage
? of downloaded o-code applications. If set to YES, the third last block of the second bank
? of flash will be used for application storage (since the last 2 blocks are already set
? aside for use by the flash file system).
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT=YES
]

CFG_KEY = OTV_INCLUDE_CURSOR_SUPPORT
?<p>This parameter determines whether the cursor support is included when compiling the OSD driver
[
  ?<p>Valid values are YES or NO. 
  CFG_DEFAULT = YES
]

# ***********************
# * Cable related stuff *
# ***********************
?<tr><td colspan=4><font size="+1"><center><b>Cable Modem/Tuner Configuration Options</b></center></font></td></tr>

CFG_KEY = CABLE_MODEM
?<p>This parameter determines whether or not a cable modem is present, and, 
?if present, what type of device is in use.
[
  EXTERNAL_CX24943 = 1
  WABASH_INTERNAL  = 2  
  ?NOT_PRESENT
  CFG_DEFAULT      = NOT_PRESENT
]

# CFG_KEY = CABLE_MODEM_TYPE
# ?<p>If the CABLE_MODEM != NOT_PRESENT, this parameter determines the type
# ?of cable modem used.
# [
#   CABLE_MODEM_TYPE_IB  = 1
#   CABLE_MODEM_TYPE_OOB = 2
#   CFG_DEFAULT          = CABLE_MODEM_TYPE_IB
# ]


CFG_KEY = CM_INCLUDE_DOCSIS
?<p>If set to YES, this parameter will include the appropriate DOCSIS image and modify
? the behavior of the MPEG code where appropriate
[
  ?<p>Valid values are YES and NO.
  CFG_DEFAULT = NO
]

CFG_KEY = CM_INCLUDE_DVS167_1W
?<p>If set to YES, this parameter will include the appropriate DVS167 (OOB) image and modify
? the behavior of the MPEG code where appropriate.
[
  ?<p>Valid values are YES and NO.
  ?<p>Note: DVS167 is currently only valid on North American STBs
  CFG_DEFAULT = NO
]

CFG_KEY = CM_INCLUDE_DVS167_2W
?<p>If set to YES, this parameter will include the appropriate DVS167 (OOB) image and modify
? the behavior of the MPEG code where appropriate
[
  ?<p>Valid values are YES and NO.
  ?<p>Note: DVS167 is currently only valid on North American STBs
  CFG_DEFAULT = NO
]

CFG_KEY = OC_OOBFE_DRIVER_INCLUDE
?<p>If set to YES, this parameter will build WatchTV with OC_OOBFE driver functions.
[
  ?<p>Valid values are YES and NO
  CFG_DEFAULT = NO
]

CFG_KEY = DEFAULT_SERIAL_BAUD_RATE
?<p>This parameter defines the default serial port baud rate.
[
  ?<p>Valid values here are 9600, 19200, 38400, 57600, 115200
  CFG_DEFAULT      = 115200
]

# ***********************
# * Watchdog timer      *
# ***********************

CFG_KEY = WATCHDOG
?<p>This parameter determines whether the watchdog timer is enabled or not. When it is set to
? DEB_OFF_REL_ON, it will be disabled in DEBUG builds and enabled in RELEASE builds; It can also 
? be set to FORCE_ON or FORCE_OFF regardless DEBUG builds or RELEASE builds. 
[
  ?<p>Valid values are DEB_OFF_REL_ON, FORCE_ON or FORCE_OFF.
  DEB_OFF_REL_ON = -1
  FORCE_ON = 1
  FORCE_OFF = 0 
  CFG_DEFAULT = DEB_OFF_REL_ON
]

# *****************************************
# * Flash DOWNLOAD utility configurations *
# *****************************************

CFG_KEY = DOWNLOAD_SERIAL_SUPPORT
?<p>This parameter configures the flash download utility to use the serial port as the console
? and Y-Modem to download the images to be flashed.
[
  ?<p> By default, we want the semihosting versions of the flash download utility.  Therefore we
  ? do not want serial support.
  CFG_DEFAULT = NO
]

CFG_KEY = DOWNLOAD_LAUTERBACH_SUPPORT
?<p>This parameter configures the flash download utility to use the Lauterbach ICD and TRACE32
? as a communication mechanism.  This allows a windows console app to communicate and transfer
? images to the IRD.
[
  ?<p> By default, we want the semihosting versions of the flash download utility.  Therefore we
  ? do not want serial support.
  CFG_DEFAULT = NO
]
  
CFG_KEY = SEMIHOSTING_APP
?<p>This parameter controls what libraries should be used when linking.  This is onlu valid   
? for ARM ADS and ARM SDT builds.  If set to YES, then the semihosting libraries will be used 
? in conjunction with the debugger to emulate an IO system.
[
  ?<p> By default, we want the embedded, not the semihosting libraries.
  CFG_DEFAULT = NO
]

# *************************
# * IP STB configurations *
# *************************

CFG_KEY = IPSTB_INCLUDE
?<p>This parameter is used to include IP STB related application
[
  ?<p> By default, IPSTB application is not supported  
  CFG_DEFAULT = NO
]

# ************************
# * uCO/S Startup Method *
# ************************

CFG_KEY = UCOS_STARTUP_METHOD
?<p>This parameter is used to configure the way that uCO/S-1 starts up.
[   
  STARTUP_UCOS_CONEXANT = 1
  STARTUP_UCOS_1 = 2
  STARTUP_UCOS_2 = 3  
  ?<p> By default, we startup the standard Conexant way.
  CFG_DEFAULT = STARTUP_UCOS_CONEXANT
]

CFG_KEY = IMAGE_SELFCOPY
?<p>This parameter is used to tell the image that the startup code 
?(\startup\startup.s) should copy itself (ie. the image) to RAM 
?assuming codeldr hasn't already done so.  Even if this is set 
?to YES and codeldr DID copy the image to RAM, the copy code
?will determine that the code is in the correct location
?by looking at the current value of the PC.
[
   ?<p> By default, images don't self-copy because codeldr does it
   CFG_DEFAULT = NO
]

CFG_KEY = IMAGE_RESETS_HARDWARE
?<p>This parameter tells the image NOT to assume that hardware is still
?uninitialized.  For example, startup assumes that the MMU, ROM controller,
?interrupts, etc. are in a certain state (uninitialized).  However, if startup has already
?been run once, it can not assume this.  Thus, one of the first things startup
?will do is set hardware to a known good state so the image can initialize
?successfully.
[
   ?<p> By default, we don't want images to do any more work then they
   ?already have to.
   CFG_DEFAULT = NO
]


# **************************************
# * Flash config data start address    *
# **************************************
?<tr><td colspan=4><font size="+1"><center><b>Flash Configuration Data Start Address</b></center></font></td></tr>
CFG_KEY = FLASH_CONFIG_DATA_START_ADDR
?<p> This parameter defines the start address for configuration data stored in Flash memory.
[
  ?<p>Default is 0, which means "the second sector on target flash memory".
  CFG_DEFAULT = 0
]

CFG_KEY = FLASH_CONFIG_DATA_SIZE
?<p> This parameter defines the size for configuration data stored in Flash memory. 
[
   ?<p>Default to 0, which means "size of the second sector on target flash memory".
   CFG_DEFAULT = 0
]

CFG_KEY = FLASH_CODELDR_ADDR
?<p> This parameter defines address of codeldr in Flash memory. 
[
   ?<p>Default to 0x20000000, which means "Address of codeldr".
   CFG_DEFAULT = 0x20000000
]

CFG_KEY = GZ_BUFFER_ADDR
?<p> This parameter defines start address of buffer used by GZ. 
[
   ?<p>Default to 0x10000, which means "Start Address of buffer used by GZ".
   CFG_DEFAULT = 0x10000
]
# *****************************
# * Teletext working modes    *
# *****************************
CFG_KEY = TELETEXT_MODE
?<p> This parameter defines the capability of teletext module.
[
  TELETEXT_DISABLED  = 0
  TELETEXT_OSD       = 1
  TELETEXT_VBI       = 2
  TELETEXT_BOTH      = 3
  ?<p>By default, we will disable the teletext function.
  CFG_DEFAULT        = TELETEXT_DISABLED
]

# *****************************
# * AUTO TEST Modes           *
# *****************************
CFG_KEY = AUTO_TEST_MODE
?<p> This parameter defines the capability of teletext module.
[
  AUTOTEST_DISABLED  = 0
  AUTOTEST_SERIAL    = 1
  AUTOTEST_LED       = 2
  AUTOTEST_USB       = 3
  AUTOTEST_VFILE     = 4
  ?<p>By default, we will disable the autotest function.
  CFG_DEFAULT        = AUTOTEST_DISABLED
]


###############
# CONVERT END #
###############

# *********************************************************
# * Modifications:
# * $Log: 
# *  83   STB1.8.0  1.74.1.7    7/7/04 12:33:40 AM     Steven Shen     CR(s) 
# *        9677 : add a DMXDMA
# *  82   STB1.8.0  1.74.1.6    6/29/04 9:06:08 PM     Xiao Guang Yan  CR(s) 
# *        9621 : Added config key CL_GUNZIP_FEATURE which defaults to 
# *        CL_GUNZIP_NOT_SUPPORTED.
# *  81   STB1.8.0  1.74.1.5    6/25/04 1:52:02 AM     Xiao Guang Yan  CR(s) 
# *        9585 : Changed default flash config data size to 0, meaning "size of
# *         the second flash sector".
# *  80   STB1.8.0  1.74.1.4    6/25/04 1:44:49 AM     Xiao Guang Yan  CR(s) 
# *        9585 : Added FLASH_CONFIG_DATA_SIZE.
# *  79   STB1.8.0  1.74.1.3    6/25/04 1:10:35 AM     Xiao Guang Yan  CR(s) 
# *        9585 : Added FLASH_CONFIG_DATA_START_ADDR.
# *  78   STB1.8.0  1.74.1.2    6/21/04 3:21:15 PM     Tim White       CR(s) 
# *        9528 : Use ifdef for DMXDMA and DMXREC instead of if==YES.  Do not 
# *        use PVR for
# *        
# *        including conditional demux record extension.
# *        
# *        
# *  77   STB1.8.0  1.74.1.1    6/17/04 3:39:08 PM     Miles Bintz     CR(s) 
# *        9499 : (mb+dw) add config options to allow startup to be rentrant 
# *        and self-copying
# *  76   STB1.8.0  1.74.1.0    6/17/04 3:37:49 PM     Miles Bintz     CR(s) 
# *        9499 : (mb-dw) add config options to allow startup to be rentrant 
# *        and self-copying
# *  75   mpeg      1.74        6/7/04 2:38:39 PM      Dave Wilson     CR(s) 
# *        9119 9120 : 
# *        Added key TURN_OFF_MACROVISION_DURING_INIT to control whether 
# *        Macrovision is enabled or disabled by default on IRDs which support 
# *        it.
# *  74   mpeg      1.73        5/20/04 3:57:27 PM     Billy Jackman   CR(s) 
# *        9125 9126 : Added configuration keys for BRAZOS_WABASH_FAST_UNBLANK,
# *         FAST_RETURN_FROM_PLAY, and BLANK_ON_VIDEO_START to replace #defines
# *         in video.c.
# *  73   mpeg      1.72        4/19/04 3:56:42 AM     Xiao Guang Yan  CR(s) 
# *        8822 8823 : 
# *        Added NDS codeloader definition. 
# *  72   mpeg      1.71        4/12/04 10:38:00 AM    Larry Wang      CR(s) 
# *        8826 8827 : Remove the definition of DRM_FILTER_PHASE_0_PROBLEM.
# *  71   mpeg      1.70        4/2/04 7:11:03 AM      Ian Mitchell    CR(s) 
# *        8743 8744 : Added new key UCOS_STARTUP_METHOD.
# *  70   mpeg      1.69        3/23/04 3:24:29 PM     Larry Wang      CR(s) 
# *        8638 8639 : Add XTV_SUPPORT config key.
# *  69   mpeg      1.68        3/19/04 12:31:49 PM    Tim Ross        CR(s) 
# *        8598 : Added hardware buffer defaults & linker address defaults.
# *  68   mpeg      1.67        3/11/04 9:43:19 AM     Tim Ross        CR(s) 
# *        8545 : Eliminated redefinition of NUPFILE.
# *  67   mpeg      1.66        3/10/04 4:14:20 PM     Tim White       CR(s) 
# *        8545 : Added PVR file system definition.
# *        
# *  66   mpeg      1.65        3/10/04 2:46:17 PM     Larry Wang      CR(s) 
# *        8551 : Add a new config key - PARSER_PASSAGE_ENABLE.
# *  65   mpeg      1.64        3/2/04 9:35:04 AM      Bobby Bradford  CR(s) 
# *        8481 : Move specification of MODEM_SW_TYPE (softmodem library type) 
# *        from SW to HW configs ... that way, we have fewer CONFIG files 
# *        created for multiple modem types
# *  64   mpeg      1.63        2/2/04 5:17:25 PM      Bobby Bradford  CR(s) 
# *        8277 : Add new configuration parameter to specify modem software 
# *        type (it can now be FLIPPER or a variety of CORSICA type softmodems)
# *  63   mpeg      1.62        12/4/03 3:45:55 PM     Yong Lu         CR(s) 
# *        8078 : 
# *        
# *        added IPSTB_INCLUDE key for IPSTB application
# *  62   mpeg      1.61        11/14/03 8:15:45 AM    Ganesh Banghar  CR(s): 
# *        7926 added new rtos UCOS2 to the RTOS options.
# *  61   mpeg      1.60        11/13/03 12:22:34 PM   Tim White       CR(s): 
# *        7935 Add DMA Input Demux Extension swconfig definition.
# *        
# *  60   mpeg      1.59        11/3/03 5:34:36 PM     Miles Bintz     CR(s): 
# *        7801 Added config features for disabling interrupts in the loader 
# *        and switching loader to "linux" mode
# *  59   mpeg      1.58        10/23/03 3:23:37 PM    Tim White       CR(s): 
# *        7701 Add codeldrext functionality to codeldr.  Changes here force 
# *        codeldrext functionality
# *        into codeldr by default.  Can be overriden by using BARE.CFG for 
# *        emulation and/or chip
# *        bringup (initial chip bringup) purposes.
# *        
# *  58   mpeg      1.57        9/23/03 6:31:40 PM     Miles Bintz     SCR(s) 
# *        7523 :
# *        added software config options to support flash download utility(s)
# *        
# *  57   mpeg      1.56        9/23/03 6:30:48 PM     Miles Bintz     SCR(s) 
# *        7523 :
# *        added software config options to support flash download utility(s)
# *        
# *  56   mpeg      1.55        9/17/03 1:21:28 PM     QA - Roger Taylor SCR(s)
# *         7484 :
# *        added psos25 to list of RTOS's
# *        
# *  55   mpeg      1.54        9/16/03 4:18:14 PM     Angela Swartz   SCR(s) 
# *        7477 :
# *        added WATCHDOG key to allow enable/disable the watchdog timer;
# *        added ENABLE_TRACE_IN_RELEASE to enable trace output in release 
# *        builds.
# *        The default for WATCHDOG is DEB_OFF_REL_ON which means watchdog is 
# *        off in debug builds and on in release builds. The default for 
# *        ENABLE_TRACE_IN_RELEASE is OFF.
# *        
# *  54   mpeg      1.53        8/5/03 6:55:02 PM      Sahil Bansal    SCR(s): 
# *        7110 
# *        Change configs so that FIREWIRE on/off decision is done in 
# *        hwconfig.cfg (no by default) and turned on in milano_na.cfg.  
# *        Removed FIREWIRE ON/OFF define from swconfig.cfg and 
# *        gen_allcable.cfg since it is really more of a hw board issue as to 
# *        whether it will be supported or not.
# *        
# *  53   mpeg      1.52        8/4/03 11:05:04 AM     Larry Wang      SCR(s) 
# *        7124 7125 :
# *        Add a new config key PARSER_DES_DESCRAMBLER.
# *        
# *  52   mpeg      1.51        7/24/03 5:09:58 PM     Sahil Bansal    SCR(s): 
# *        7038 
# *        Added configuration defines/switches for 1394
# *        
# *  51   mpeg      1.50        7/22/03 8:24:24 PM     Angela Swartz   SCR(s) 
# *        6958 :
# *        added/changed some config keys to define the defaults that are used 
# *        to coming from CONFMGR to allow build w/o CONFMGR
# *        
# *  50   mpeg      1.49        7/10/03 7:27:10 PM     Senthil Veluswamy SCR(s)
# *         6935 :
# *        Added comments to explain the SC Voltage Key Default added.^D
# *        
# *        
# *  49   mpeg      1.48        7/10/03 7:07:46 PM     Senthil Veluswamy SCR(s)
# *         6935 :
# *        Added Key to set the appropriate voltage to the Smart Card Voltage 
# *        PIOs. Default used will be 3.3V
# *        
# *  48   mpeg      1.47        7/9/03 3:26:32 PM      Tim White       SCR(s) 
# *        6901 :
# *        Phase 3 codeldrext drop.
# *        
# *        
# *  47   mpeg      1.46        7/2/03 2:58:26 PM      Senthil Veluswamy SCR(s)
# *         6862 :
# *        Addition of KAL Native support key was missing a ]. Added that
# *        
# *        
# *  46   mpeg      1.45        6/30/03 4:57:38 PM     Miles Bintz     SCR(s) 
# *        6807 :
# *        changes to support milano IRD (added smart card hw & sw config 
# *        parameters)
# *        
# *  45   mpeg      1.44        6/30/03 2:29:42 PM     Senthil Veluswamy SCR(s)
# *         6862 :
# *        Added Config option to enable KAL support for native RTOS tasks.
# *        
# *  44   mpeg      1.43        6/24/03 6:31:00 PM     Tim White       SCR(s) 
# *        6831 :
# *        Add flash, hsdp, demux, OSD, and demod support to codeldrext.
# *        
# *        
# *  43   mpeg      1.42        6/20/03 2:22:20 PM     Dave Wilson     SCR(s): 
# *        6733 
# *        Added OPENTV_USE_CACHEABLE_SCRATCHPAD. This selects which of 2 
# *        possible
# *        fixes are used to prevent graphics corruption when running OpenTV on
# *         an
# *        ARM920 processor - either make the OSD scratchpad non-cacheable or 
# *        make it
# *        cacheable but flush the cache prior to blitting from the scratchpad.
# *        
# *  42   mpeg      1.41        5/20/03 5:39:20 PM     Tim Ross        SCR(s) 
# *        6497 6498 :
# *        Removed EXTERNAL_DECODER definition.
# *        
# *  41   mpeg      1.40        5/14/03 4:15:24 PM     Tim White       SCR(s) 
# *        6346 6347 :
# *        Added EXTENDED_CODELDR build option.
# *        
# *        
# *  40   mpeg      1.39        5/2/03 10:52:30 AM     Bob Van Gulick  SCR(s) 
# *        6151 :
# *        Remove PTS_OFFSET as a build option.  On by default now.
# *        
# *        
# *  39   mpeg      1.38        4/29/03 4:23:10 PM     Miles Bintz     SCR(s) 
# *        6116 :
# *        updated to video decoder config options
# *        
# *  38   mpeg      1.37        4/28/03 11:52:54 AM    Sahil Bansal    SCR(s): 
# *        6110 
# *        Changed default for OC_OOBFE_DRIVER_INCLUDE to be NO
# *        
# *  37   mpeg      1.36        4/26/03 5:08:08 PM     Sahil Bansal    SCR(s): 
# *        6110 
# *        Added config var for OC_OOBFE driver
# *        
# *  36   mpeg      1.35        4/21/03 7:48:24 PM     Senthil Veluswamy SCR(s)
# *         6065 :
# *        Added Key to disable SRC in PCM
# *        
# *  35   mpeg      1.34        4/16/03 4:32:54 PM     Larry Wang      SCR(s) 
# *        6045 :
# *        Add a new config key FILTER_ON_LENGTH and set its default value to 
# *        be NO.
# *        
# *  34   mpeg      1.33        4/9/03 2:46:28 PM      Bob Van Gulick  SCR(s) 
# *        5995 :
# *        Remove dtv benchmark selection from swconfig.  Not necessary to have
# *         in config.
# *        
# *        
# *  33   mpeg      1.32        3/31/03 5:30:32 PM     Bob Van Gulick  SCR(s) 
# *        5921 :
# *        Add config option to build with DirecTV benchmark application
# *        
# *        
# *  32   mpeg      1.31        3/26/03 12:52:08 PM    Bob Van Gulick  SCR(s) 
# *        5879 :
# *        Add support for DirectTV program guide selection - APG or MPG
# *        
# *        
# *  31   mpeg      1.30        3/19/03 10:22:50 AM    Dave Wilson     SCR(s) 
# *        5810 :
# *        
# *        
# *        
# *        Changed the default state of ENABLE_OTV_APPLICATION_STORAGE from NO 
# *        to YES.
# *        
# *  30   mpeg      1.29        3/17/03 11:10:12 AM    Matt Korte      SCR(s) 
# *        5777 :
# *        Change to DTV and DIRECTV
# *        
# *  29   mpeg      1.28        3/14/03 9:05:26 AM     Dave Wilson     SCR(s) 
# *        5758 :
# *        Changed OTV_EXTENSION_XXX defaults such that all extensions that we 
# *        support
# *        are built by default.
# *        
# *  28   mpeg      1.27        2/26/03 8:27:16 PM     Tim White       SCR(s) 
# *        5163 :
# *        Force DEMUX driver to be the default demux driver instead of 
# *        GENDMXC.
# *        
# *        
# *  27   mpeg      1.26        2/19/03 5:19:56 PM     Tim White       SCR(s) 
# *        5557 5556 :
# *        Added Brazos Pawser microcodes.
# *        
# *        
# *  26   mpeg      1.25        2/14/03 10:38:22 AM    Larry Wang      SCR(s) 
# *        5504 :
# *        Add a new CFG_KEY = PARSER_TYPE
# *        
# *        
# *  25   mpeg      1.24        2/13/03 1:59:04 PM     Angela Swartz   SCR(s) 
# *        5488 :
# *        added key RFMOD_DEFAULT_MODE
# *        
# *  24   mpeg      1.23        2/13/03 1:24:24 PM     Angela Swartz   SCR(s) 
# *        5489 :
# *        renamed the key INCLUDE_CURSOR_SUPPORT to OTV_INCLUDE_CURSOR_SUPPORT
# *        
# *  23   mpeg      1.22        2/11/03 1:29:26 PM     Dave Wilson     SCR(s) 
# *        5137 :
# *        Added 2 new config options - ENABLE_DEFERRED_VIDEO_UNBLANK and 
# *        OPENTV_USE_VTS_WORKAROUNDS.
# *        
# *  22   mpeg      1.21        2/7/03 1:49:06 PM      Bobby Bradford  SCR(s) 
# *        5443 :
# *        Added default definition for OTV_PTS_NOTIFICATION_PERIOD, used
# *        for DVB Subtitle Support
# *        
# *  21   mpeg      1.20        2/7/03 10:11:58 AM     Angela Swartz   SCR(s) 
# *        5147 :
# *        added INCLUDE_CURSOR_SUPPORT option to allow OSD driver to compile 
# *        with or without the cursor support 
# *        
# *        
# *  20   mpeg      1.19        2/7/03 9:40:06 AM      Bobby Bradford  SCR(s) 
# *        5443 :
# *        Enabling support for DVB Subtitling ... not yet implemented, but
# *        enabling the CONFIG option for development.
# *        
# *  19   mpeg      1.18        2/6/03 5:22:14 PM      Dave Wilson     SCR(s) 
# *        5436 :
# *        Added ENABLE_OTV_APPLICATION_STORAGE option to enable or disable 
# *        storage 
# *        of downloaded apps in flash.
# *        
# *  18   mpeg      1.17        2/4/03 3:38:48 PM      Senthil Veluswamy SCR(s)
# *         5401 :
# *        Fixed typo in defining the brazos PCM workaround Key
# *        
# *  17   mpeg      1.16        2/4/03 2:42:20 PM      Senthil Veluswamy SCR(s)
# *         5401 :
# *        Created a new Key for the Brazos 16bit Memory PCM workaround
# *        
# *  16   mpeg      1.15        2/3/03 9:42:24 AM      Lucy C Allevato SCR(s) 
# *        5291 :
# *        Corrected a typo where AUDIO_FORMAT_SUPPORT was being defaulted to 
# *        AUDIO_MPEG instead of AUDIO_MPEG2
# *        
# *  15   mpeg      1.14        1/31/03 11:14:28 AM    Dave Wilson     SCR(s) 
# *        5350 :
# *        Added INCLUDE_OTV_EXTENSION_TELETEXT to control inclusion of the 
# *        OpenTV
# *        teletext extension when building OpenTV Core 1.0 images.
# *        
# *  14   mpeg      1.13        1/30/03 12:33:02 PM    Dave Wilson     SCR(s) 
# *        5358 :
# *        Added DISABLE_TRACE_TIMESTAMPS option. This allows customers to 
# *        build images
# *        that do not add timestamp strings to each trace message. This can be
# *         useful
# *        in cases where the trace output must be compared against other 
# *        application
# *        trace, such as when doing OpenTV VTS testing.
# *        
# *  13   mpeg      1.12        1/29/03 1:19:42 PM     Dave Wilson     SCR(s) 
# *        5145 :
# *        Added 2 new OpenTV-specific config options - 
# *        ALTERNATE_AV_INIT_HANDLING
# *        and ALTERNATE_AV_SQC_HANDLING.
# *        
# *  12   mpeg      1.11        1/27/03 4:18:58 PM     Dave Wilson     SCR(s) 
# *        5320 :
# *        Added NUM_OTV_BRIGHTNESS/CONTRAST/COLOR_LEVELS
# *        
# *  11   mpeg      1.10        1/25/03 11:13:02 AM    Dave Wilson     SCR(s) 
# *        3880 :
# *        Added INCLUDE_OTV_EXTENSION_xxx labels to allow control over which 
# *        of the
# *        optional OpenTV extension modules to include in an OTV2CTRL image.
# *        
# *  10   mpeg      1.9         1/24/03 9:55:40 AM     Dave Moore      SCR(s) 
# *        5305 :
# *        removed FREQ_SCREEN
# *        
# *        
# *  9    mpeg      1.8         1/16/03 1:58:14 PM     Dave Wilson     SCR(s) 
# *        5253 :
# *        Added VIDEO_OUTPUT_STANDARD_DEFAULT and VIDEO_FORMAT_PANSCAN_DEFAULT
# *        parameters. These are used in builds where CONFMGR does not exist to
# *         determine
# *        the video standard (PAL, NTSC, SECAM) and format (PANSCAN, 
# *        LETTERBOX) to use.
# *        
# *  8    mpeg      1.7         1/16/03 11:46:32 AM    Dave Wilson     SCR(s) 
# *        5146 :
# *        Added OPENTV_DIRECT_HEAP_SIZE to allow size and use of the Direct 
# *        heap to be
# *        specified.
# *        
# *  7    mpeg      1.6         1/14/03 3:16:04 PM     Dave Wilson     SCR(s) 
# *        5210 :
# *        Added new parameters to allow the number and size of the OpenTV far 
# *        segments
# *        to be specified in the config file rather than hardcoded into a 
# *        header.
# *        
# *  6    mpeg      1.5         1/2/03 4:50:36 PM      Dave Wilson     SCR(s) 
# *        5141 :
# *        
# *        Added ALTERNATE_OCODE_MEM_PROTECTION and 
# *        ALTERNATE_ABORT_REPORT_HANDLING
# *        features to software configuration to allow customers to replace our
# *         default
# *        implementations of these 2 features.
# *        
# *  5    mpeg      1.4         12/20/02 1:57:30 PM    Dave Wilson     SCR(s) 
# *        5204 :
# *        Added features required for trace-to-memory function
# *        
# *  4    mpeg      1.3         12/17/02 3:45:28 PM    Tim White       SCR(s) 
# *        5182 :
# *        Added comments for MMU_CACHE_DISABLE config option.  Added new 
# *        config option
# *        MMU_CACHE_TYPE.
# *        
# *        
# *  3    mpeg      1.2         11/27/02 12:53:54 PM   Senthil Veluswamy SCR(s)
# *         5001 :
# *        Added USE_UNOPTIMIZED_PCM_SRC to select between using the Optimized 
# *        ARM routines and the Unoptimized routines
# *        
# *  2    mpeg      1.1         11/20/02 2:16:16 PM    Senthil Veluswamy SCR(s)
# *         4997 :
# *        Corrected documentation explaining the setting of the Parser and SW 
# *        SPDIF Fix Keys
# *        
# *  1    mpeg      1.0         11/20/02 9:32:16 AM    Dave Wilson     
# * $
# *********************************************************

